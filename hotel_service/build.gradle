plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.tourease'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation files('../libs/ErrorHandler.jar')

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.github.usefulness:webp-imageio:0.5.1'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.8.0'
    implementation 'com.neovisionaries:nv-i18n:1.11'
    // https://mvnrepository.com/artifact/me.paulschwarz/spring-dotenv
    implementation 'me.paulschwarz:spring-dotenv:2.5.4'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    //    Export PDF
    implementation 'com.ibm.icu:icu4j:71.1'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.6.6'
    implementation 'com.itextpdf:kernel:8.0.2'
    implementation 'com.itextpdf:html2pdf:4.0.1'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
